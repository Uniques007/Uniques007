#include<iostream>
#include<cstring>
#include<cmath>
using namespace std;


class Vozac{
    protected:
    
       char ime[100];
       int vozrast;
       int broj_trki;
       bool veteran;
       
    public:   
      Vozac(char *i,int voz,int broj,bool vet=false){
          strcpy(ime,i);
          vozrast=voz;
          broj_trki=broj;
          veteran=vet;
      }
      friend ostream &operator<<(ostream &out,Vozac &v){
          out<<v.ime<<endl;
          out<<v.vozrast<<endl;
          out<<v.broj_trki<<endl;
          if(v.veteran==true){
              out<<"VETERAN"<<endl;
          }
          return out;
      }
    virtual int zarabotuvackaPoTrka() = 0;
    virtual double danok()=0;
    bool operator ==(Vozac &v){
          return (zarabotuvackaPoTrka()==v.zarabotuvackaPoTrka());
      }
    
    
};

class Avtomobilist:public Vozac{
    protected:
      double cen_avtomobil;
    public:
      Avtomobilist(char *i,int voz,int broj,bool vet=false,int cena=0):Vozac(i,voz,broj,vet){
          cen_avtomobil=cena;
      }
      int zarabotuvackaPoTrka(){
          return cen_avtomobil/5;
      }
      double danok(){
          if(broj_trki>10){
              return zarabotuvackaPoTrka()*0.15;
          }
          else{
              return zarabotuvackaPoTrka()*0.1;
          }
      }
    
    
};
class Motociklist:public Vozac{
    protected:
      int mojknost_motor;
    public:
            Motociklist( char *ime,int vozrast,int brojNaTrki,bool daliVeteran=false,int mokjnost=0) : Vozac(ime,vozrast,brojNaTrki,daliVeteran)
    {
        mojknost_motor=mokjnost;
    }
      
    
      
      
     int zarabotuvackaPoTrka(){
         return mojknost_motor*20;
     }
     
     double danok(){
         if(veteran==true){
             return 0.25*zarabotuvackaPoTrka();
         }
         else{
             return 0.2*zarabotuvackaPoTrka();
         }
     }
     
     };

 double soIstaZarabotuvachka(Vozac **temp,int n,Vozac *v){
     int counter=0;
     for(int i=0;i<n;i++){
         if(*temp[i]==(*v)){
             counter++;
         }
     }
     return counter;
 }

int main() {
	int n, x;
	cin >> n >> x;
	Vozac **v = new Vozac*[n];
	char ime[100];
	int vozrast;
	int trki;
	bool vet;
	for(int i = 0; i < n; ++i) {
		cin >> ime >> vozrast >> trki >> vet;
		if(i < x) {
			float cena_avto;
			cin >> cena_avto;
			v[i] = new Avtomobilist(ime, vozrast, trki, vet, cena_avto);
		} else {
			int mokjnost;
			cin >> mokjnost;
			v[i] = new Motociklist(ime, vozrast, trki, vet, mokjnost);
		}
	}
	cout << "=== DANOK ===" << endl;
	for(int i = 0; i < n; ++i) {
		cout << *v[i];
		cout << v[i]->danok() << endl;
	}
	cin >> ime >> vozrast >> trki >> vet;
	int mokjnost;
	cin >> mokjnost;
	Vozac *vx = new Motociklist(ime, vozrast, trki, vet, mokjnost);
	cout << "=== VOZAC X ===" << endl;
	cout << *vx;
	cout << "=== SO ISTA ZARABOTUVACKA KAKO VOZAC X ===" << endl;
	cout << soIstaZarabotuvachka(v, n, vx);
    for(int i = 0; i < n; ++i) {
        delete v[i];
    }
    delete [] v;
    delete vx;
	return 0;
}
